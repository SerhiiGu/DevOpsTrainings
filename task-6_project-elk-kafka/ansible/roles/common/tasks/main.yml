---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 10800

- name: Install base packages
  apt:
    name:
      - curl
      - ca-certificates
      - vim
      - git
      - wget
      - net-tools
      - rsyslog
      - htop
      - ntp
      - ntpdate
      - python3-pip
      - software-properties-common
      - apt-transport-https
    state: present

- name: Install elastic repo GPG key
  shell: wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -

- name: Install elastic apt repo itself
  shell: echo "deb https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list

- name: Update apt cache once more
  apt:
    update_cache: yes

- name: Install filebeat
  apt:
    name: filebeat
    state: present

- name: Copy .vimrc
  copy:
    src: ".vimrc"
    dest: "/root/.vimrc"

- name: Upload filebeat config
  template:
    src: filebeat.yml.j2
    dest: "/etc/filebeat/filebeat.yml"
    mode: 0644

- name: Ensure filebeat is running
  service:
    name: filebeat
    state: started
    enabled: yes

- name: Check filebeat service status
  systemd:
    name: filebeat
    state: started
  register: filebeat_status

- name: Show firebeat service state
  debug:
    msg: "{{ 'running' if filebeat_status.status['ActiveState'] == 'active' else 'stopped' }}"


- name: Install Docker
  shell: |
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
  args:
    creates: /usr/bin/docker

- name: Enable Docker service
  systemd:
    name: docker
    enabled: yes
    state: started

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Check if Docker is installed
  command: which docker
  register: docker_installed
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name: Install Docker Python needed packages (only if Docker is installed)
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - python3-docker
    - python3-jsondiff
    - python3-pretty-yaml
  when: (ansible_facts.packages[item] is not defined) and (docker_installed.rc == 0)

- name: Init Docker Swarm
  command: docker swarm init
  when: docker_installed.rc == 0
  changed_when: false
  failed_when: false

- name: Setup timezone to Kyiv
  timezone:
    name: Europe/Kyiv

- name: Ensure NTP is running
  service:
    name: ntp
    state: started
    enabled: yes

