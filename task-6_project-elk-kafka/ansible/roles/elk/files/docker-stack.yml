version: "3.8"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - discovery.type=single-node      # для тестів — одна нода
      - bootstrap.memory_lock=true      # щоб уникнути memory swapping
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # пам'ять JVM
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - global_net
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.elk-insecure.rule=Host(`elk.tst.local`)"
        - "traefik.http.routers.elk-insecure.entrypoints=web"
        - "traefik.http.routers.elk-insecure.middlewares=redirect-to-https"

        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

        - "traefik.http.routers.elk.rule=Host(`elk.tst.local`)"
        - "traefik.http.routers.elk.entrypoints=websecure"
        - "traefik.http.routers.elk.tls=true"
        - "traefik.http.services.elasticsearch.loadbalancer.server.port=9200"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 1G
    ports:
      - "9200:9200"

  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter
    container_name: elasticsearch-exporter
    environment:
      - ES_URI=http://elasticsearch:9200
      - ES_ALL=true
      - ES_INDICES=true
      - ES_CLUSTER_SETTINGS=true
    ports:
      - "9114:9114"  # Порт для експорту метрик
    networks:
      - global_net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - global_net
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.kibana-insecure.rule=Host(`kibana.tst.local`)"
        - "traefik.http.routers.kibana-insecure.entrypoints=web"
        - "traefik.http.routers.kibana-insecure.middlewares=redirect-to-https"

        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

        - "traefik.http.routers.kibana.rule=Host(`kibana.tst.local`)"
        - "traefik.http.routers.kibana.entrypoints=websecure"
        - "traefik.http.routers.kibana.tls=true"
        - "traefik.http.services.kibana.loadbalancer.server.port=5601"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    ports:
      - "5601:5601"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    environment:
      - LOGSTASH_STARTUP_LOGGER=logstash::info
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    networks:
      - global_net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    ports:
      - "5044:5044" # порт для Filebeat або іншого beat
      - "5000:5000" # порт для TCP/UDP вхідних даних
    depends_on:
      - elasticsearch

volumes:
  elasticsearch_data:

networks:
  global_net:
    external: true

