- name: Install Nginx
  apt:
    name: nginx
    state: present

- name: Stop and disable Apache2
  systemd:
    name: apache2
    enabled: false
    state: stopped
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name: Enable and start Nginx
  systemd:
    name: nginx
    enabled: true
    state: started

- name: Copy MDB nginx config
  template:
    src: mdb.j2
    dest: /etc/nginx/sites-available/mdb
    mode: '0644'
  notify: Reload Nginx

- name: Enable MDB in NGINX
  file:
    src: /etc/nginx/sites-available/mdb
    dest: /etc/nginx/sites-enabled/mdb
    state: link
    force: true
  notify: Reload Nginx


- name: Handle Let's Encrypt certificate
  block:
    - name: Check if certificate already exists
      stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: cert_stat

    - name: Obtain Let's Encrypt certificate with Certbot
      command: >
        certbot certonly \
        --webroot -w /var/www/certbot/ \
        -d {{ domain_name }} \
        --email {{ certbot_email }} \
        --agree-tos \
        --non-interactive
      when: not cert_stat.stat.exists

    - name: Check again if certificate exists (post-obtain)
      stat:
        path: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      register: cert_stat

    - name: Set PHP version based on OS family
      set_fact:
        php_version: >-
          {% if ansible_facts['distribution'] == 'Ubuntu' %}
            8.3
          {% elif ansible_facts['distribution'] == 'Debian' %}
            8.2
          {% else %}
            8.2
          {% endif %}

    - name: Deploy SSL-enabled NGINX config for {{ domain_name }}
      template:
        src: mdb_ssl.j2
        dest: /etc/nginx/sites-available/mdb
        owner: root
        group: root
        mode: '0644'
      when: cert_stat.stat.exists
      notify: Reload Nginx

  when: use_ssl | lower == 'yes'

