- name: Find local file mdb.local_*.zip
  find:
    paths: roles/files/files/
    patterns: 'mdb.local_*.zip'
    use_regex: false
  register: mdb_zip_files
  delegate_to: localhost
  run_once: true

- name: Copy found mdb zip file to remote host
  copy:
    src: "{{ item.path }}"
    dest: /tmp/mdb.zip
  loop: "{{ mdb_zip_files.files }}"
  loop_control:
    loop_var: item
  when: mdb_zip_files.files | length > 0

- name: Create site root directory
  file:
    path: "{{ domain_root_dir }}"
    state: directory
    mode: '0755'

- name: Unpack mdb.zip to {{ domain_root_dir }}
  unarchive:
    src: /tmp/mdb.zip
    dest: "{{ domain_root_dir }}"
    remote_src: yes

- name: Move and overwrite all files from {{ domain_root_dir }}/mdb to {{ domain_root_dir }}
  shell: |
    rsync -a --remove-source-files --exclude='mdb' {{ domain_root_dir }}/mdb/ {{ domain_root_dir }}/
    rm -rf {{ domain_root_dir }}/mdb
    chown -R {{ ansible_user }}:{{ ansible_user }} "{{ domain_root_dir }}"
  args:
    executable: /bin/bash


- name: Generate random 32-character MySQL password
  set_fact:
    mysql_user_password: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"

- name: Ensure MySQL user exists with correct password
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    host: "%"
    priv: "movies_db.*:ALL"
    state: present
  become: true

- name: Update mysql_config.php with MySQL credentials
  replace:
    path: "{{ domain_root_dir }}/includes/mysql_config.php"
    regexp: '(\$m_user\s*=\s*")[^"]*(";)'
    replace: '\1{{ mysql_user }}\2'

- name: Update mysql_config.php with MySQL password
  replace:
    path: "{{ domain_root_dir }}/includes/mysql_config.php"
    regexp: '(\$m_password\s*=\s*")[^"]*(";)'
    replace: '\1{{ mysql_user_password }}\2'

- name: Update mysql_config.php with proper MySQL host
  replace:
    path: "{{ domain_root_dir }}/includes/mysql_config.php"
    regexp: '\$m_server\s*=\s*"mysql";'
    replace: '$m_server = "localhost";'

