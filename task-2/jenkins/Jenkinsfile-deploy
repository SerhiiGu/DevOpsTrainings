pipeline {
    agent any

    environment {
      DOCKERHUB_CREDS = credentials('DockerHub_User_Pass')
      MANAGER_HOST = "192.168.1.188"
      FLASK_IMAGE = 'flask-app:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Push Flask App') {
            steps {
                dir('task-2/flask-app') {                    
                    sshagent (credentials: ['swarm-manager-ssh-key']) {
                        script {
                            def BUILD_PATH = "/root/build/task-2/flask-app"

                            sh """
                                ssh -o StrictHostKeyChecking=no root@${MANAGER_HOST} '
                                    mkdir -p ${BUILD_PATH} && rm -rf ${BUILD_PATH}/*'
                            """

                            echo "📦 SCP files to Swarm Manager"
                            sh """
                                scp -r -o StrictHostKeyChecking=no . root@${MANAGER_HOST}:${BUILD_PATH}/
                            """

                            echo "🛠️  Build & Push Docker Image"
                            sh """
                                ssh -o StrictHostKeyChecking=no root@${MANAGER_HOST} '
                                    echo ${DOCKERHUB_CREDS_PSW} | docker login -u ${DOCKERHUB_CREDS_USR} --password-stdin &&
                                    docker build -t ${DOCKERHUB_CREDS_USR}/${FLASK_IMAGE} ${BUILD_PATH} &&
                                    docker push ${DOCKERHUB_CREDS_USR}/${FLASK_IMAGE}'
                            """
                        }
                    }
                }
            }
        }

        stage('Create Docker network if not exists') {
            steps {
                sshagent (credentials: ['swarm-manager-ssh-key']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no root@${MANAGER_HOST} '
                            docker network inspect traefik-net >/dev/null 2>&1 && \
                            echo "Network already exists" || \
                            (docker network create --driver=overlay --scope=swarm traefik-net && echo "Network created")'
                    '''
                }
            }
        }

        stage('Deploy Stack') {
            steps {
                dir('task-2/flask-app') {
                    sshagent (credentials: ['swarm-manager-ssh-key']) {
                        sh """
                            scp -o StrictHostKeyChecking=no docker-compose.yml root@${MANAGER_HOST}:/root/
                            ssh -o StrictHostKeyChecking=no root@${MANAGER_HOST} '
                                docker stack deploy -c docker-compose.yml task2_flask'
                        """
                    }
                }
            }
        }
    }
}
