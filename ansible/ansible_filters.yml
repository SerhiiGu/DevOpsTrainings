---
- name: Full Ansible Filter Demo
  hosts: localhost
  gather_facts: false
  vars:
    my_string: "  ansible filters  "
    my_list: [3, 1, 2, 2, 3]
    list1: [1, 2]
    list2: [3, 4]
    my_dict:
      key1: val1
      key2: val2
    timestamp: 1680000000
    csv_string: "a,b,c"
    users:
      - name: alice
        uid: 1001
      - name: bob
        uid: 1002
      - name: charlie
        uid: 1003
    pair_list:
      - { key: a, value: 1 }
      - { key: b, value: 2 }
    maybe_var: null
    file_path: "/etc/ansible/ansible.cfg"

  tasks:

    - name: 1Ô∏è‚É£ String filters
      debug:
        msg:
          # –ó–º—ñ–Ω–∞ –¥–æ –≤–µ—Ä—Ö–Ω—å–æ–≥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É
          upper: "{{ my_string | upper }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: '  ANSIBLE FILTERS  '
          # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–æ–±—ñ–ª—ñ–≤ –∑ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∫—ñ–Ω—Ü—è
          trimmed: "{{ my_string | trim }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: 'ansible filters'
          # –ó–∞–º—ñ–Ω–∞ —Ç–µ–∫—Å—Ç—É
          replaced: "{{ 'example.com' | replace('.com', '.org') }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: 'example.org'

    - name: 2Ô∏è‚É£ List filters
      debug:
        msg:
          # –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è(2 —Ñ—ñ–ª—å—Ç—Ä–∏)
          unique_sorted: "{{ my_list | unique | sort }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: [1, 2, 3]
          # –û–±'—î–¥–Ω–∞–Ω–Ω—è —Å–ø–∏—Å–∫—ñ–≤
          merged: "{{ list1 + list2 }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: [1,2,3,4]
          # –í–∏—Ç—è–≥–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω—å –ø–æ–ª—è –∑—ñ —Å–ø–∏—Å–∫—É.
          mapped_names: "{{ users | map(attribute='name') | list }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: ['alice', 'bob', 'charlie']

    - name: 3Ô∏è‚É£ Dict filters
      debug:
        msg:
          # –í–∏–≤–µ—Å—Ç–∏ –≤—Å—ñ –∫–ª—é—á—ñ
          keys: "{{ my_dict | dict2items | map(attribute='key') | list }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: ['key1', 'key2']
          # –ü–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ dict –Ω–∞ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä
          dict2items: "{{ my_dict | dict2items }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: [{'key': 'key1', 'value': 'val1'}, {'key': 'key2', 'value': 'val2'}]
          # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–ª—é—á–∞
          has_key1: "{{ 'key1' in my_dict }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: true

    - name: 4Ô∏è‚É£ Number filters
      debug:
        msg:
          # –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–ª–∞ –∑ –Ω—É–ª—è–º–∏
          formatted: "{{ '{:03d}'.format(5) }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: '005'
          # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –≤ int
          as_integer: "{{ '42' | int }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: 42
          # –û–±—á–∏—Å–ª–µ–Ω–Ω—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
          abs_val: "{{ -10 | abs }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: 10

    - name: 6Ô∏è‚É£ Type & conditional filters
      debug:
        msg:
          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∏–ø—É
          is_string: "{{ my_string is string }}" # –ü–æ–≤–µ—Ä—Ç–∞—î true, —è–∫—â–æ —Ä—è–¥–æ–∫
          # –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —É —Å–ø–∏—Å–æ–∫
          split_list: "{{ csv_string | split(',') }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: ['a', 'b', 'c']
          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—É—Å—Ç–æ—Ç–∏
          is_empty: "{{ [] | length == 0 }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: true
          # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É –∑–º—ñ–Ω–Ω–æ—ó my_list
          type_debug: "{{ my_list | type_debug }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: list

    - name: 7Ô∏è‚É£ Select/Reject filters
      debug:
        msg:
          # # –í–∏–±—Ä–∞—Ç–∏ –ª–∏—à–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ uid > 1001
          uids_gt_1001: "{{ users | selectattr('uid', '>', 1001) | list }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: [{'name': 'bob', 'uid': 1002}, {'name': 'charlie', 'uid': 1003}]
          # –í—ñ–¥–∫–∏–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —ñ–º‚Äô—è–º 'bob'
          not_bob: "{{ users | rejectattr('name', 'equalto', 'bob') | list }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: [{'name': 'alice', 'uid': 1001}, {'name': 'charlie', 'uid': 1003}]
          # –í–∏—Ç—è–≥—Ç–∏ –ª–∏—à–µ uid –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
          names: "{{ users | map(attribute='name') | list }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: ['alice', 'bob', 'charlie']

    - name: 8Ô∏è‚É£ Dict conversion filters
      debug:
        msg:
          # –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø–∞—Ä —É —Å–ª–æ–≤–Ω–∏–∫
          items2dict: "{{ pair_list | items2dict }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: {'a': 1, 'b': 2}
          # –ó–ª–∏—Ç—Ç—è —Å–ª–æ–≤–Ω–∏–∫—ñ–≤
          combined: "{{ {'a': 1} | combine({'b': 2}) }}" # –†–µ–∑—É–ª—å—Ç–∞—Ç: {'a': 1, 'b': 2}

    - name: 9Ô∏è‚É£ Default & ternary filters
      debug:
        msg:
          # –Ø–∫—â–æ maybe_var –Ω–µ –∑–∞–¥–∞–Ω–æ ‚Äî –ø–æ–≤–µ—Ä–Ω–µ 'fallback'
          default_value: "{{ maybe_var | default('fallback') }}"
          # –¢–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
          ternary_check: "{{ true | ternary('yes', 'no') }}" # Result: 'yes'

    - name: üîü Path filters
      debug:
        msg:
          # basename
          basename: "{{ file_path | basename }}" # Result: 'ansible.cfg'
          # dirname
          dirname: "{{ file_path | dirname }}" # Result: '/etc/ansible'
          # realpath
          realpath: "{{ file_path | realpath }}" # Result: '/etc/ansible/ansible.cfg'
          # fileglob (–∑–Ω–∞–π—Ç–∏ –≤—Å—ñ .conf —Ñ–∞–π–ª–∏)
          fileglob: "{{ lookup('fileglob', '/etc/*.conf') }}"

    - name: 1Ô∏è‚É£1Ô∏è‚É£ Random, shuffle, min/max/sum
      debug:
        msg:
          # –í–∏–ø–∞–¥–∫–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç
          random_item: "{{ my_list | random }}"
          # –ü–µ—Ä–µ–º—ñ—à–∞—Ç–∏ —Å–ø–∏—Å–æ–∫
          shuffled: "{{ my_list | shuffle }}"
          # –ú—ñ–Ω—ñ–º—É–º/–º–∞–∫—Å–∏–º—É–º/—Å—É–º–∞
          min_val: "{{ my_list | min }}"
          max_val: "{{ my_list | max }}"
          sum_val: "{{ my_list | sum }}"

